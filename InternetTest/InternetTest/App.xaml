<Application
    x:Class="InternetTest.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InternetTest"
    xmlns:mica="clr-namespace:MicaWPF.Lite.Styles;assembly=MicaWPF.Lite">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <mica:ThemeDictionary DesignModeTheme="Auto" Theme="Auto" />
                <ResourceDictionary Source="/Themes/Dark.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  Sidebar button style  -->
            <Style x:Key="SidebarButton" TargetType="RadioButton">
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border
                                x:Name="border"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="10">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource CardBackground}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource CardBackground}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource CardBackground}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Sidebar button style with dropdown chevron  -->
            <Style x:Key="SidebarChevronButton" TargetType="ToggleButton">
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border
                                x:Name="border"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                CornerRadius="10">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <TextBlock
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        FontFamily="\Fonts\#FluentSystemIcons-Regular"
                                        FontSize="14"
                                        RenderTransformOrigin="0.5,0.5"
                                        Text="&#xF2B1;">
                                        <TextBlock.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform x:Name="UtilRotator" Angle="0" />
                                            </TransformGroup>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource CardBackground}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource CardBackground}" />
                                </Trigger>
                                <EventTrigger RoutedEvent="ToggleButton.Checked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="UtilRotator"
                                                Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                To="90"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="UtilRotator"
                                                Storyboard.TargetProperty="(RotateTransform.Angle)"
                                                To="0"
                                                Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ThemeButton" TargetType="{x:Type RadioButton}">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Border
                                x:Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Border}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource Border}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="Transparent" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource Gray}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ToggleButton Style for ComboBox  -->
            <Style x:Key="ComboBoxToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource Border}"
                                BorderThickness="1"
                                CornerRadius="5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource WindowButtonsPressed1}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Default ComboBox Style (no x:Key means applies to all ComboBoxes)  -->
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <!--  ToggleButton  -->
                                <ToggleButton
                                    Height="{TemplateBinding Height}"
                                    Background="Transparent"
                                    ClickMode="Press"
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{StaticResource ComboBoxToggleButtonStyle}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="18" />
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter
                                            x:Name="contentPresenter"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding SelectionBoxItem}"
                                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                            IsHitTestVisible="false"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <!--  Arrow  -->
                                        <Path
                                            Grid.Column="2"
                                            Width="8"
                                            Height="4"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M 0 0 L 4 4 L 8 0 Z"
                                            Fill="{DynamicResource Border}" />
                                    </Grid>
                                </ToggleButton>

                                <!--  Popup for dropdown  -->
                                <Popup
                                    Name="Popup"
                                    AllowsTransparency="True"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    Placement="Bottom"
                                    PopupAnimation="Slide">
                                    <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border
                                            x:Name="DropDownBorder"
                                            Margin="5"
                                            Background="{DynamicResource Background1}"
                                            BorderBrush="{DynamicResource Border}"
                                            BorderThickness="1"
                                            CornerRadius="8">
                                            <Border.Effect>
                                                <DropShadowEffect
                                                    BlurRadius="10"
                                                    Opacity="0.4"
                                                    ShadowDepth="2"
                                                    Color="Black" />
                                            </Border.Effect>
                                            <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                <StackPanel IsItemsHost="True" />
                                            </ScrollViewer>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBoxItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBoxItem">
                            <Border
                                Padding="4"
                                Background="{TemplateBinding Background}"
                                CornerRadius="5">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--  Remove default hover effect  -->
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource WindowButtonsPressed1}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TitleBarButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Height" Value="32" />
                <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Margin="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowButtonsHover1}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource WindowButtonsHover1}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    x:Name="checkBoxBorder"
                                    Width="20"
                                    Height="20"
                                    Margin="1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderBrush="{DynamicResource Border}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="3">
                                    <Grid x:Name="markGrid">
                                        <Path
                                            x:Name="optionMark"
                                            Margin="1"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                            Fill="{DynamicResource Gray}"
                                            Opacity="0"
                                            Stretch="None" />
                                        <Rectangle
                                            x:Name="indeterminateMark"
                                            Margin="2"
                                            Fill="{DynamicResource Gray}"
                                            Opacity="0" />
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    x:Name="contentPresenter"
                                    Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="Center"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasContent" Value="true">
                                    <Setter Property="Padding" Value="4 -1 0 0" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="1" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="0" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="optionMark" Property="Opacity" Value="0" />
                                    <Setter TargetName="indeterminateMark" Property="Opacity" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground1}" />
                <Setter Property="CaretBrush" Value="{DynamicResource Foreground1}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border
                                Background="Transparent"
                                BorderBrush="{DynamicResource Border}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                                <ScrollViewer x:Name="PART_ContentHost" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <BulletDecorator Background="Transparent" Cursor="Hand">
                                <BulletDecorator.Bullet>
                                    <Grid Width="16" Height="16">
                                        <Ellipse
                                            x:Name="RadioBorder"
                                            Fill="{DynamicResource Background1}"
                                            Stroke="{DynamicResource Border}"
                                            StrokeThickness="1" />
                                        <Ellipse
                                            x:Name="RadioMark"
                                            Margin="4"
                                            Fill="{DynamicResource Border}"
                                            Visibility="Collapsed" />
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <ContentPresenter
                                    Margin="4 0 0 0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center" />
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="RadioMark" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="RadioBorder" Property="Stroke" Value="{DynamicResource Border}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="5">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="Link" TargetType="Button">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border
                                x:Name="border"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                CornerRadius="5">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource Background1}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
